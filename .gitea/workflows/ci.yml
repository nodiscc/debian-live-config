# this workflow will not work in containers, only on VMs/bare-metal hosts sue to limitation of
# container-based environments (filesystems mounted with nodev/noexec). Since parts of the build
# process require root access/the following should be configured in /etc/sudoers.d/debian-live-config:
# act-runner ALL=NOPASSWD: /usr/bin/apt -y install live-build make build-essential wget git unzip colordiff apt-transport-https rename ovmf rsync python3-venv gnupg
# act-runner ALL=NOPASSWD: /usr/bin/lb

# To publish the resulting ISO to GItea's generic package, registry, a personal
# access token must be created from /user/settings/applications with permissions
# to read/write from packge registry, and the value of the token must be added
# as a repository secret from $REPOSITORY/settings/actions/secrets, with the
# name PACKAGE_REGISTRY_API_TOKEN

name: CI
on:
  push:

concurrency:
  group: ${{ gitea.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: host
    steps:
    - name: checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # full history must be fetched for git tag detection mechanism in Makefile to work
    - name: restore cache
      uses: actions/cache/restore@v3
      with:
        path: cache/packages*
        key: packages-cache
    - name: run build
      run: make
    - name: compute and sign checksums
      run: make checksums
    - name: publish ISO file to generic package registry
      run: |
        set -o errexit; \
        package_registry_url="$GITHUB_SERVER_URL/api/packages/$GITHUB_REPOSITORY_OWNER/generic/debian-live-config/$GITHUB_REF"; \
        package_registry_user="$GITHUB_REPOSITORY_OWNER:${{ secrets.PACKAGE_REGISTRY_API_TOKEN }}"; \
        last_tag=(git describe --tags --abbrev=0); \
        curl --user "$package_registry_user" -X DELETE "$package_registry_url/debian-live-config-debian-bookworm.iso" || true; \
        curl --user "$package_registry_user" -X DELETE "$package_registry_url/SHA512SUMS.txt" || true; \
        curl --user "$package_registry_user" --upload-file ./iso/*.iso "$package_registry_url/debian-live-config-debian-bookworm.iso"; \
        curl --user "$package_registry_user" --upload-file ./iso/SHA512SUMS "$package_registry_url/SHA512SUMS"; \
    - name: save cache
      uses: actions/cache/save@v3
      with:
        path: cache/packages*
        key: packages-cache
    # files generated by the build process must be explicitely cleaned, else the builtin post-build action will not be able to remove files ownerd by root created by sudo lb build
    - name: clean build artifacts
      if: always()
      run: make clean_purge
    - name: debug
      run: git status --untracked-files
